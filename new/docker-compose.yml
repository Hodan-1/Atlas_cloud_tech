version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ port
      - "15672:15672"  # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - atlas_network
    environment:
      - RABBITMQ_DEFAULT_USER=atlas
      - RABBITMQ_DEFAULT_PASS=atlas

  data_loader:
    build:
      context: .
      dockerfile: Dockerfile
      target: data_loader
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=atlas
      - LUMI=10
      - FRACTION=1.0
    volumes:
      - ./data:/app/data
    networks:
      - atlas_network
    restart: on-failure

  data_processor:
    build:
      context: .
      dockerfile: Dockerfile
      target: data_processor
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=atlas
    networks:
      - atlas_network
    deploy:
      replicas: 3  # Run multiple instances for parallel processing
    restart: on-failure

  analysis:
    build:
      context: .
      dockerfile: Dockerfile
      target: analysis
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=atlas
    networks:
      - atlas_network
    restart: on-failure

  visualization:
    build:
      context: .
      dockerfile: Dockerfile
      target: visualization
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=atlas
    volumes:
      - ./output:/app/output
    networks:
      - atlas_network
    restart: on-failure

networks:
  atlas_network:
    driver: bridge

volumes:
  rabbitmq_data:
