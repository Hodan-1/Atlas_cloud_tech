version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: atlas
      RABBITMQ_DEFAULT_PASS: opendata
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - hzz-net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  coordinator:
    build: .
    command: python coordinator.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=opendata
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hzz-net

  data_loader:
    build: .
    command: python data_loader.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=opendata
    deploy:
      replicas: 2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hzz-net

  data_processor:
    build: .
    command: python data_processor.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=opendata
    deploy:
      replicas: 4
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hzz-net

  analyzer:
    build: .
    command: python analyzer.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=opendata
    deploy:
      replicas: 2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hzz-net

  visualizer:
    build: .
    command: python visualization.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=atlas
      - RABBITMQ_PASS=opendata
    volumes:
      - ./output:/app/output
    depends_on:
      - rabbitmq
    networks:
      - hzz-net

networks:
  hzz-net:
    driver: bridge
