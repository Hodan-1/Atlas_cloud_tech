networks:
  hzz_network:

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    networks:
      - hzz_network
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  coordinator:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "coordinator.py"]
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - hzz_network
    restart: on-failure
  data_reader:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "data_reader.py"]
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - hzz_network
    restart: on-failure
    
  worker:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "worker.py"]
    networks:
      - hzz_network
    deploy:
      replicas: 4  
      resources:
        limits:
          cpus: "1.0"  
          memory: "1G"   
    restart: on-failure

  aggregator:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started
    command: ["python", "aggregator.py"]
    networks:
      - hzz_network
    restart: on-failure



