version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ main communication port
      - "15672:15672" # RabbitMQ management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  worker:
    build:
      context: .  # Build from the root directory
      dockerfile: Dockerfile
    container_name: worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    command: ["python", "worker.py"]  # Explicitly specify the command to run
    restart: unless-stopped

  messenger:
    build:
      context: .  # Build from the root directory
      dockerfile: Dockerfile
    container_name: messenger
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DISPLAY=${DISPLAY}  # Forward the display
    volumes:
      - ./output:/app/output  # Mount output directory
      - /tmp/.X11-unix:/tmp/.X11-unix  # Mount X11 socket
    command: ["python", "messenger.py"]  # Explicitly specify the command to run
    restart: unless-stopped